@model Website.Pages.PurchaseViewModel
@{
    ViewData["Title"] = "PurchaseView";
}

<div class="card" style="width: 100%">
    <div class="card-body">
        <h3 class="card-title">@Model.Purchase.Basket.Store.Name</h3>
        @{ foreach (var product in Model.Purchase.Basket.Products)
            {
                await Html.RenderPartialAsync("ProductView", new ProductViewModel(product.Item1));
            @:<h6>  Quantity Purchased: @product.Item2</h6>
            if (Model.CanReview)
                {
                    IEnumerable<SEWorkshop.DataModels.DataReview> reviews = product.Item1.Reviews.Where(r => r.Writer.Username.Equals((Model.UserManager.GetDataLoggedInUser(Model.Session)).Username));
                    if (reviews.Count() == 0)
                    {
                    <form id="messageSend" asp-page="/UserPage" method="post">
                        <div class="form-group">
                            <input type="hidden" name="storeName" value="@product.Item1.Store.Name">
                            <input type="hidden" name="productName" value="@product.Item1.Name">
                            <label for="msg_txt_area">Review Product</label>
                            <textarea class="form-control" id="msg_txt_area" rows="3" name="content"></textarea>
                            <button type="submit" class="form-control btn btn-primary">Post Review</button>
                        </div>
                    </form>
                    }
                    else
                    {
                        <p>Product Already Reviewed: " @reviews.First().Description "</p>
                    }
                }
            }
            }
        <br />
        <h5 class="card-subtitle mb-2">Total Purchase Price: @Model.TotalPrice ₪</h5>
    </div>
</div>
