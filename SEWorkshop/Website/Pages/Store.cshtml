@page "{storeName}"
@model Website.Pages.StoreModel
@{
    ViewData["Title"] = Model.StoreName;
}
@using SEWorkshop.DataModels;

@{
    if (Model.Store == null)
    {
        @:<h1>Error</h1>
        @:<div>@Model.ErrorMsg</div>
    }
    else
    {
        @:<h1>Welcome to the Store: @Model.Store.Name</h1>
        }
        if (Model.LoggedUser.Owns.Contains(Model.Store) || Model.LoggedUser.Manages.ContainsKey(Model.Store))
        {
            <form id="manage" method="post">
                <div class="form-group">
                    <input type="hidden" name="store" value=@Model.Store.Name>
                    <button type="submit" class="form-control btn btn-primary" style="width: 18%">Manage Store</button>
                </div>
            </form>
        }
        var um = Model.UserManager;
        var sessionId = Model.HttpContext.Session.Id;
        var user = um.IsLoggedIn(sessionId) ? um.GetDataLoggedInUser(sessionId) : null;
        var isMan = user != null && Model.Store.Owners.ContainsKey(um.GetDataLoggedInUser(sessionId));
        if (user != null && ((Model.Store.Owners.ContainsKey(user) ||
            (isMan && user.Manages[Model.Store].Contains(SEWorkshop.Enums.Authorizations.Watching)))))
        {
            <h5 class="card-title"><a href='/StorePurchaseHistory/@Model.Store.Name'>Purchase History</a></h5>
        }
        foreach (var product in Model.Store.Products)
        {
            bool authorized = user != null && (Model.Store.Owners.ContainsKey(user) ||
            (isMan && user.Manages[Model.Store].Contains(SEWorkshop.Enums.Authorizations.Products)));
            ProductViewModel pvm = new ProductViewModel(product, um, authorized);
            pvm.destPath = pvm.Product.Store.Name;
            await Html.RenderPartialAsync("ProductView", pvm);
        }
    }
}

